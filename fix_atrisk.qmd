---
title: "Fix At-Risk"
format: html
---

```{r}
library(tidyverse)
library(glue)
library(readxl)
```

```{r}
fy <- 2025

path_data <- glue(
  "C:/Users",
  "{Sys.getenv('USERNAME')}",
  "OneDrive - District of Columbia Public Schools",
  "DCPS Budget - Data",
  "Personnel",
  "485",
  .sep = "/"
)

path_clean <- glue("{path_data}/Clean/{fy}")
```

```{r}
data_485_wide <-
  read_csv(
    glue("{path_clean}/485_{fy}_wide.csv"),
    col_types = str_c(str_dup("c", 23), str_dup("d", 105), str_dup("c", 7)),
    na = ""
  )

data_485 <-
  read_csv(
    glue("{path_clean}/485_{fy}.csv"),
    col_types = str_c(str_dup("c", 31), str_dup("d", 1), str_dup("c", 3)),
    na = ""
  ) %>%
  rename(agency = fund_agency)

data_025 <-
  read_xlsx("r025.xlsx", col_types = c(rep("text", 7), rep("numeric", 9))) %>%
  select(agency, ends_with("_id"), available, spend)

crosswalk <-
  read_xlsx("crosswalk_atrisk.xlsx", col_types = "text")
```

```{r}
available <-
  data_025 %>%
  rename(account_id_budget = account_id) %>%
  mutate(
    spend_expected = (spend / 8) * 4,
    available_yearend = available - spend_expected
  )
```

```{r}
needs_fix <-
  data_485 %>%
  left_join(crosswalk, by = join_by(program_id == program_id_ge)) %>%
  filter(program_id %in% crosswalk$program_id_ge) %>%
  replace_na(list(project_id = "0", award_id = "0", task_id = "0")) %>%
  mutate(account_id_budget = case_when(
    account_pref_4 == "7011" ~ "7011001",
    account_pref_4 == "7014" ~ "7014008",
    .default = account_id
  )) %>%
  left_join(available, by = join_by(
    agency,
    fund_id,
    program_id_ar == program_id,
    costcenter_id,
    project_id, award_id,
    account_id_budget
  )) %>%
  filter(available_yearend > 0.00) %>%
  rename(amount_original = amount) %>%
  group_by(
    agency,
    fund_id,
    program_id_ar,
    costcenter_id,
    project_id, award_id,
    account_id_budget
  ) %>%
  mutate(amount_accountgroup = sum(amount_original)) %>%
  mutate(multiplier = case_when(
    amount_accountgroup <= available_yearend ~ 1.00,
    .default = available_yearend / amount_accountgroup
  )) %>%
  mutate(amount_journal = amount_original * multiplier)
```

```{r}
needs_fix_rollup <-
  needs_fix %>%
  group_by(
    agency,
    fund_id,
    program_id, program_id_ar,
    costcenter_id,
    account_id,
    project_id, award_id, task_id,
    account_id_budget
  ) %>%
  summarize(
    amount_journal = sum(amount_journal),
    amount_original = sum(amount_original),
    .groups = "drop"
  )
```

```{r}
from <-
  needs_fix_rollup %>%
  select(
    agency,
    fund_id,
    program_id,
    costcenter_id,
    account_id,
    project_id, award_id, task_id,
    amount_journal
  ) %>%
  mutate(subtask_id = "0", .before = amount_journal) %>%
  rename_with(\(x) str_c("from_", x))

to <-
  needs_fix_rollup %>%
  select(
    agency,
    fund_id,
    program_id = program_id_ar,
    costcenter_id,
    account_id,
    project_id, award_id, task_id,
    amount_journal
  ) %>%
  mutate(subtask_id = "0", .before = amount_journal) %>%
  rename_with(\(x) str_c("to_", x))
```

```{r}
journal <-
  from %>%
  bind_cols(to) %>%
  bind_cols(select(needs_fix_rollup, amount_original, account_id_budget)) %>%
  mutate(blank_1 = NA_character_, .before = "to_agency") %>%
  mutate(blank_2 = NA_character_, .before = "amount_original") %>%
  left_join(available, by = join_by(
    to_agency == agency,
    to_fund_id == fund_id,
    to_program_id == program_id,
    to_costcenter_id == costcenter_id,
    to_project_id == project_id, to_award_id == award_id,
    account_id_budget
  ))

journal %>% write_csv("journal.csv", na = "")
```

```{r}
supporting_485 <-
  data_485_wide %>%
  filter(row_485 %in% needs_fix$row_485) %>%
  select(!row_485)

supporting_485 %>% write_csv("supporting_485.csv", na = "")
```

```{r}
Sys.time()
```
