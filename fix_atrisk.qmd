---
title: "Fix At-Risk"
format: html
---

```{r}
library(tidyverse)
library(glue)
library(readxl)
```

Setup

```{r}
fy <- 2025

path_data <- glue(
  "C:/Users",
  "{Sys.getenv('USERNAME')}",
  "OneDrive - District of Columbia Public Schools",
  "DCPS Budget - Data",
  "Personnel",
  "485",
  .sep = "/"
)

path_clean <- glue("{path_data}/Clean/{fy}")
```

Input files

```{r}
data_485_wide <-
  read_csv(
    glue("{path_clean}/485_{fy}_wide.csv"),
    col_types = str_c(str_dup("c", 23), str_dup("d", 105), str_dup("c", 7)),
    na = ""
  )

data_485 <-
  read_csv(
    glue("{path_clean}/485_{fy}.csv"),
    col_types = str_c(str_dup("c", 31), str_dup("d", 1), str_dup("c", 3)),
    na = ""
  ) %>%
  rename(agency = fund_agency) %>%
  relocate(account_id, .after = costcenter_id)

data_025 <-
  read_xlsx("r025.xlsx", col_types = c(rep("text", 7), rep("numeric", 9))) %>%
  select(agency, ends_with("_id"), available, spend_todate = spend) %>%
  rename_with(.fn = \(x) str_c(x, "_budget"), .cols = ends_with("id"))

reprogramming <-
  read_xlsx("reprogramming.xlsx", col_types = c(rep("text", 7), "numeric")) %>%
  rename_with(.fn = \(x) str_c(x, "_budget"), .cols = ends_with("id"))

crosswalk_atrisk <-
  read_xlsx("crosswalk_atrisk.xlsx", col_types = "text")

crosswalk_atrisk_overage <-
  read_xlsx("crosswalk_atrisk_overage.xlsx", col_types = "text")
```

Project spending into remaining months and filter for relevant budgets

```{r}
available <-
  data_025 %>%
  # reduce budget amounts by pending reprogramming
  left_join(reprogramming, by = join_by(
    agency, fund_id_budget, program_id_budget, costcenter_id_budget,
    account_id_budget, project_id_budget, award_id_budget
  )) %>%
  replace_na(list(change = 0.00)) %>%
  mutate(available = available + change) %>%
  select(!change) %>%
  #
  mutate(
    spend_addl_expected = (spend_todate / 9.0) * 3.0,
    available_yearend = available - spend_addl_expected
  ) %>%
  filter(available_yearend > 0.00)

available_1010212 <- available %>% filter(fund_id_budget == "1010212")
available_1010001 <- available %>% filter(fund_id_budget == "1010001")
available_400476 <- available %>% filter(program_id_budget == "400476")
```

Calculate journal amounts for each line of 485

Functions

```{r}
jrnl_amt <- function(x, budget) {
  x %>%
    left_join(budget, by = join_by(
      agency, fund_id_budget, program_id_budget, costcenter_id_budget,
      account_id_budget, project_id_budget, award_id_budget
    )) %>%
    filter(available_yearend > 0.00) %>%
    group_by(
      agency, fund_id_budget, program_id_budget, costcenter_id_budget,
      account_id_budget, project_id_budget, award_id_budget
    ) %>%
    mutate(amount_accountgroup = sum(amount_original)) %>%
    ungroup() %>%
    mutate(multiplier = case_when(
      amount_accountgroup <= available_yearend ~ 1.00,
      .default = available_yearend / amount_accountgroup
    )) %>%
    mutate(amount_journal = amount_original * multiplier) %>%
    mutate(leftover = amount_original - amount_journal)
}
```

Prepare 485 records for joining on budget lines

```{r}
needs_fix <-
  data_485 %>%
  mutate(
    fund_id_budget = fund_id,
    program_id_budget = program_id,
    costcenter_id_budget = costcenter_id,
    account_id_budget = case_when(
      account_pref_4 == "7011" ~ "7011001",
      account_pref_4 == "7014" ~ "7014008",
      .default = account_id
    ),
    project_id_budget = project_id,
    award_id_budget = award_id,
    task_id_budget = task_id
  ) %>%
  mutate(amount_original = amount) %>%
  filter(amount_original > 0.00) %>%
  replace_na(
    list(
      project_id = "0", project_id_budget = "0",
      award_id = "0", award_id_budget = "0",
      task_id = "0", task_id_budget = "0"
    )
  )
```

1010212

```{r}
needs_fix_1010212 <-
  needs_fix %>%
  # add columns needed for join on relevant budget table
  left_join(crosswalk_atrisk, by = join_by(program_id == program_id_ge)) %>%
  filter(!is.na(program_id_ar)) %>%
  # join on relevant budget table
  mutate(fund_id_budget = "1010212", program_id_budget = program_id_ar) %>%
  jrnl_amt(available_1010212)

leftover_1010212 <-
  needs_fix_1010212 %>%
  select(
    row_485, agency, fund_id, program_id, costcenter_id,
    account_id, project_id, award_id,
    leftover
  )
```

Reduce starting amounts based on previous step

```{r}
needs_fix <-
  needs_fix %>%
  left_join(leftover_1010212, by = join_by(
    row_485, agency, fund_id, program_id, costcenter_id,
    account_id, project_id, award_id
  )) %>%
  mutate(
    amount_original = if_else(!is.na(leftover), leftover, amount_original)
  ) %>%
  select(!leftover) %>%
  filter(amount_original > 0.00)
```

1010001

```{r}
needs_fix_1010001 <-
  needs_fix %>%
  # add columns needed for join on relevant budget table
  left_join(crosswalk_atrisk, by = join_by(program_id == program_id_ge)) %>%
  filter(!is.na(program_id_ar)) %>%
  # join on relevant budget table
  mutate(fund_id_budget = "1010001", program_id_budget = program_id_ar) %>%
  jrnl_amt(available_1010001)

leftover_1010001 <-
  needs_fix_1010001 %>%
  select(
    row_485, agency, fund_id, program_id, costcenter_id,
    account_id, project_id, award_id,
    leftover
  )
```

Reduce starting amounts based on previous step

```{r}
needs_fix <-
  needs_fix %>%
  left_join(leftover_1010001, by = join_by(
    row_485, agency, fund_id, program_id, costcenter_id,
    account_id, project_id, award_id
  )) %>%
  mutate(
    amount_original = if_else(!is.na(leftover), leftover, amount_original)
  ) %>%
  select(!leftover) %>%
  filter(amount_original > 0.00)
```

400476

```{r}
needs_fix_400476 <-
  needs_fix %>%
  # add columns needed for join on relevant budget table
  left_join(crosswalk_atrisk_overage, by = join_by(
    fund_id, costcenter_id, program_id == program_id_ge
  )) %>%
  filter(!is.na(program_id_ar)) %>%
  # join on relevant budget table
  mutate(program_id_budget = program_id_ar) %>%
  jrnl_amt(available_400476)

# don't need to update amounts after last step
```

Build supporting 485

```{r}
needs_fix_combined <-
  bind_rows(needs_fix_1010212, needs_fix_1010001, needs_fix_400476) %>%
  group_by(row_485, account_raw) %>%
  summarize(amount_journal = sum(amount_journal), .groups = "drop") %>%
  mutate(across(account_raw, \(x) str_replace(x, "amt_x", "AMT-X"))) %>%
  pivot_wider(
    names_from = account_raw, values_from = amount_journal, names_sort = TRUE
  )

accounts_present <- names(needs_fix_combined)[2:ncol(needs_fix_combined)]
```

```{r}
supporting_485 <-
  data_485_wide %>%
  select(!any_of(accounts_present)) %>%
  mutate(across(starts_with("AMT"), \(x) 0.00)) %>%
  right_join(needs_fix_combined, by = join_by(row_485)) %>%
  select(
    `REPORT AGENCY`:`HR-X7196007`,
    sort(names(.)[str_detect(names(.), "^HR-")]),
    sort(names(.)[str_detect(names(.), "^AMT")]),
    `Fund-Descr`:row_485
  ) %>%
  mutate(across(starts_with("AMT"), \(x) replace_na(x, 0.00))) %>%
  mutate(AMTTOT = rowSums(across(starts_with("AMT-")))) %>%
  arrange(row_485)

supporting_485 %>% write_csv("supporting_485.csv", na = "")
```

Generate journal entries

Functions

```{r}
jrnl_rollup <- function(x) {
  x %>%
    group_by(
      agency,
      fund_id, fund_id_budget,
      program_id, program_id_budget,
      costcenter_id,
      account_id, account_id_budget,
      project_id, award_id, task_id,
    ) %>%
    summarize(
      amount_journal = sum(amount_journal),
      amount_original = sum(amount_original),
      .groups = "drop"
    )
}

jrnl_from <- function(x) {
  x %>%
    select(
      agency,
      fund_id,
      program_id,
      costcenter_id,
      account_id,
      project_id, award_id, task_id,
      amount_journal
    ) %>%
    mutate(subtask_id = "0", .after = task_id) %>%
    rename_with(\(x) str_c("from_", x))
}

jrnl_to <- function(x) {
  x %>%
    select(
      agency,
      fund_id = fund_id_budget,
      program_id = program_id_budget,
      costcenter_id,
      # journal to detailed account, not budget account
      account_id,
      project_id, award_id, task_id,
      amount_journal
    ) %>%
    mutate(subtask_id = "0", .after = task_id) %>%
    rename_with(\(x) str_c("to_", x))
}

jrnl_journal <- function(x, budget, step) {
  rollup <- jrnl_rollup(x)

  from <- jrnl_from(rollup)
  to <- jrnl_to(rollup)

  bind_cols(from, to) %>%
    bind_cols(select(rollup, account_id_budget, amount_original)) %>%
    mutate(blank_1 = NA_character_, .after = "from_amount_journal") %>%
    mutate(blank_2 = NA_character_, .after = "to_amount_journal") %>%
    left_join(budget, by = join_by(
      to_agency == agency,
      to_fund_id == fund_id_budget,
      to_program_id == program_id_budget,
      to_costcenter_id == costcenter_id_budget,
      to_project_id == project_id_budget, to_award_id == award_id_budget,
      account_id_budget
    )) %>%
    mutate(leftover = amount_original - to_amount_journal) %>%
    mutate(step = step, .after = blank_2) %>%
    arrange(
      from_costcenter_id, from_program_id, from_account_id,
      to_costcenter_id, to_fund_id, to_program_id, to_account_id
    )
}
```

1010212

```{r}
journal_1010212 <-
  jrnl_journal(needs_fix_1010212, budget = available_1010212, step = "1010212")
```

1010001

```{r}
journal_1010001 <-
  jrnl_journal(needs_fix_1010001, budget = available_1010001, step = "1010001")
```

400476

```{r}
journal_400476 <-
  jrnl_journal(needs_fix_400476, budget = available_400476, step = "400476")
```

Combined

```{r}
journal <- bind_rows(journal_1010212, journal_1010001, journal_400476)

journal %>% write_csv("journal.csv", na = "")
```

```{r}
Sys.time()
```

```{r}
journal %>%
  pull(from_amount_journal) %>%
  sum()

journal %>%
  pull(to_amount_journal) %>%
  sum()

supporting_485 %>%
  pull(AMTTOT) %>%
  sum()

journal %>%
  count(from_program_id, from_costcenter_id, from_account_id, sort = T) %>%
  filter(n > 1)
```
